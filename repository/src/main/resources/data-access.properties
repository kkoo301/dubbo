#jpa setting
jpa.showSql=true
#jpa.generateDdl isture will been generate tables;
jpa.generateDdl=false

#hibernate.default_schema=FCLOUD

#mysql database setting
jpa.database=MYSQL
jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost/world?useUnicode=true&characterEncoding=utf-8
jdbc.username=root
jdbc.password=admin

#Oracle database setting
#jpa.database=ORACLE
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@192.168.0.25:1521:XE
#jdbc.url=jdbc:oracle:thin:@192.168.0.56:1521:ORCL
#jdbc.url=jdbc:oracle:thin:@98.10.65.138:1521:ORCL
#jdbc.username=FCLOUD
#jdbc.password=123456


#connection pool settings
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
druid.initialSize=1
#最大连接池数量
druid.maxActive=10
#最小连接池数量
druid.minIdle=0
#配置获取连接等待超时的时间
druid.maxWait=10000
#超过时间限制是否回收
druid.removeAbandoned=true
#超时时间；单位为秒。180秒=3分钟
druid.removeAbandonedTimeout=180
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=300000
#验证连接有效与否的SQL，不同的数据配置不同
druid.validationQuery=select 1
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
druid.testWhileIdle=true
#这里建议配置为TRUE，防止取到的连接不可用
druid.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn=true
#打开PSCache，并且指定每个连接上PSCache的大小
druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20

druid.filters=stat







